// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using DulceFacil.Dominio.Entities;


namespace DulceFacil.Infrastructura.Persistence;

public partial class DulceFacilDBContext : DbContext
{
    public DulceFacilDBContext()
    {
    }

    public DulceFacilDBContext(DbContextOptions<DulceFacilDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Clientes> Clientes { get; set; }

    public virtual DbSet<DetallePedidos> DetallePedidos { get; set; }

    public virtual DbSet<Empleados> Empleados { get; set; }

    public virtual DbSet<Pedidos> Pedidos { get; set; }

    public virtual DbSet<Productos> Productos { get; set; }

    public virtual DbSet<RutasEntrega> RutasEntrega { get; set; }

    public virtual DbSet<Usuarios> Usuarios { get; set; }

    public virtual DbSet<Zonas> Zonas { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-NA0KLT0;Initial Catalog=DulceFacilDB;Integrated Security=True;Encrypt=False");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Clientes>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Clientes__3214EC0700EA1B71");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Direccion)
                .IsRequired()
                .HasMaxLength(200);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Telefono)
                .IsRequired()
                .HasMaxLength(50);

            entity.HasOne(d => d.Zona).WithMany(p => p.Clientes)
                .HasForeignKey(d => d.ZonaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Clientes__ZonaId__398D8EEE");
        });

        modelBuilder.Entity<DetallePedidos>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DetalleP__3214EC0701BF50A6");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.PrecioUnitario).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Pedido).WithMany(p => p.DetallePedidos)
                .HasForeignKey(d => d.PedidoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DetallePe__Pedid__412EB0B6");

            entity.HasOne(d => d.Producto).WithMany(p => p.DetallePedidos)
                .HasForeignKey(d => d.ProductoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__DetallePe__Produ__4222D4EF");
        });

        modelBuilder.Entity<Empleados>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Empleado__3214EC0772326243");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Cargo)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Telefono).HasMaxLength(50);
        });

        modelBuilder.Entity<Pedidos>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Pedidos__3214EC0795CC805A");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Estado)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.FechaPedido).HasColumnType("datetime");

            entity.HasOne(d => d.Cliente).WithMany(p => p.Pedidos)
                .HasForeignKey(d => d.ClienteId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__Pedidos__Cliente__3E52440B");
        });

        modelBuilder.Entity<Productos>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Producto__3214EC077A4A90D7");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Precio).HasColumnType("decimal(10, 2)");
        });

        modelBuilder.Entity<RutasEntrega>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RutasEnt__3214EC07D845F75E");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.FechaEntrega).HasColumnType("datetime");
            entity.Property(e => e.Observaciones).HasMaxLength(255);

            entity.HasOne(d => d.Empleado).WithMany(p => p.RutasEntrega)
                .HasForeignKey(d => d.EmpleadoId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RutasEntr__Emple__47DBAE45");

            entity.HasOne(d => d.Zona).WithMany(p => p.RutasEntrega)
                .HasForeignKey(d => d.ZonaId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__RutasEntr__ZonaI__46E78A0C");
        });

        modelBuilder.Entity<Usuarios>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Usuarios__3214EC07968AAAC0");

            entity.HasIndex(e => e.NombreUsuario, "UQ__Usuarios__6B0F5AE0DF8C3D71").IsUnique();

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.ClaveHash)
                .IsRequired()
                .HasMaxLength(255);
            entity.Property(e => e.NombreUsuario)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Rol)
                .IsRequired()
                .HasMaxLength(50);
        });

        modelBuilder.Entity<Zonas>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Zonas__3214EC0757770764");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.Ciudad)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Nombre)
                .IsRequired()
                .HasMaxLength(100);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}